{"version":3,"file":"static/js/768.d95ff1c9.chunk.js","mappings":"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","sources":["components/Room/RemoveUserFromRoom.jsx","components/Room/AddUserInRoom.jsx","components/Chat/Input.jsx","components/Chat/Message.jsx","components/Chat/Messages.jsx","components/Chat/Chat.jsx","components/Room/Room.jsx"],"sourcesContent":["import {\r\n  Backdrop,\r\n  Button,\r\n  CircularProgress,\r\n  ListItemText,\r\n  MenuItem,\r\n  MenuList,\r\n} from \"@mui/material\";\r\nimport { useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useRemoveUserFromRoomMutation } from \"../../redux/api\";\r\n\r\nconst RemoveUserFromRoom = ({ roomId, usersInRoom }) => {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const [removeUserFromRoom, { isSuccess, isLoading, isError, error }] =\r\n    useRemoveUserFromRoomMutation();\r\n\r\n  const handleClick = async (newUserId) => {\r\n    await removeUserFromRoom({\r\n      userId: user._id,\r\n      roomId,\r\n      newUserId,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      toast.success(\"User Removed\");\r\n      window.location.reload(false);\r\n    }\r\n    if (isError) {\r\n      toast.error(error.message);\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [isSuccess, isError]);\r\n\r\n  return (\r\n    <>\r\n      <Backdrop\r\n        sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n        open={isLoading}\r\n      >\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <MenuList>\r\n        {usersInRoom\r\n          .filter((newUser) => newUser.userId !== user._id)\r\n          .map((newUser) => (\r\n            <MenuItem key={newUser.userId}>\r\n              <ListItemText>\r\n                <h3>{newUser.userName}</h3>\r\n              </ListItemText>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => handleClick(newUser.userId)}\r\n              >\r\n                Remove\r\n              </Button>\r\n            </MenuItem>\r\n          ))}\r\n      </MenuList>\r\n    </>\r\n  );\r\n};\r\nexport default RemoveUserFromRoom;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Backdrop,\r\n  Button,\r\n  CircularProgress,\r\n  ListItemText,\r\n  MenuItem,\r\n  MenuList,\r\n} from \"@mui/material\";\r\nimport { useAddUserInRoomMutation, useGetRoomsQuery, useGetUsersQuery } from \"../../redux/api\";\r\nimport { useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst AddUserInRoom = ({ roomId, usersInRoom }) => {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const { data: users, isSuccess } = useGetUsersQuery();\r\n\r\n  const [\r\n    addUserInRoom,\r\n    { isLoading, isSuccess: addUserSuccess, isError, error },\r\n  ] = useAddUserInRoomMutation();\r\n  // const { refetch } = useGetRoomsQuery();\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  const handleClick = async (newUser) => {\r\n    await addUserInRoom({ userId: user._id, roomId, newUserId: newUser._id });\r\n    // refetch();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (addUserSuccess) {\r\n      toast.success(\"User Added\");\r\n      window.location.reload(false);\r\n    }\r\n    if (isError) {\r\n      toast.error(error.message);\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [isLoading]);\r\n\r\n  return (\r\n    <>\r\n      <Backdrop\r\n        sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n        open={isLoading}\r\n      >\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      <div>\r\n        <input\r\n          placeholder=\"Search User...\"\r\n          type=\"text\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          style={{ marginTop: \"10px\" }}\r\n          className=\"form-control bg-light\"\r\n        />\r\n        <br />\r\n        <div>\r\n          {isSuccess && (\r\n            <MenuList>\r\n              {users\r\n                .filter((user) => {\r\n                  if (\r\n                    usersInRoom.some((newUser) => newUser.userId === user._id)\r\n                  )\r\n                    return false;\r\n                  if (searchTerm === \"\") return true;\r\n                  else if (\r\n                    user.name\r\n                      .toLowerCase()\r\n                      .includes(searchTerm.toLowerCase()) ||\r\n                    user.email.toLowerCase().includes(searchTerm.toLowerCase())\r\n                  )\r\n                    return true;\r\n                  return false;\r\n                })\r\n                .map((newUser) => (\r\n                  <MenuItem key={newUser._id}>\r\n                    <ListItemText>\r\n                      <h3>{newUser.name}</h3>\r\n                      <p>{newUser.email}</p>\r\n                    </ListItemText>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      onClick={() => handleClick(newUser)}\r\n                    >\r\n                      Add\r\n                    </Button>\r\n                  </MenuItem>\r\n                ))}\r\n            </MenuList>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddUserInRoom;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Tooltip } from \"@mui/material\";\r\nimport MicSharpIcon from \"@mui/icons-material/MicSharp\";\r\nimport MicOffSharpIcon from \"@mui/icons-material/MicOffSharp\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport \"../../index.css\";\r\nimport \"../../index.scss\";\r\n\r\nconst SpeechRecognition =\r\n  window.SpeechRecognition || window.webkitSpeechRecognition;\r\nconst mic = new SpeechRecognition();\r\n\r\nmic.continuous = true;\r\nmic.interimResults = true;\r\nmic.lang = \"en-US\";\r\n\r\nconst Input = ({\r\n  room,\r\n  userId,\r\n  typingHandler,\r\n  setMessage,\r\n  sendMessage,\r\n  message,\r\n}) => {\r\n  const [isListening, setIsListening] = useState(false);\r\n\r\n  useEffect(() => {\r\n    handleListen();\r\n    //eslint-disable-next-line\r\n  }, [isListening]);\r\n\r\n  const handleListen = () => {\r\n    if (isListening) {\r\n      mic.start();\r\n      mic.onend = () => {\r\n        console.log(\"continue..\");\r\n        mic.start();\r\n      };\r\n    } else {\r\n      mic.stop();\r\n      mic.onend = () => {\r\n        console.log(\"Stopped Mic on Click\");\r\n      };\r\n    }\r\n    mic.onstart = () => {\r\n      console.log(\"Mics on\");\r\n    };\r\n\r\n    mic.onresult = (event) => {\r\n      const transcript = Array.from(event.results)\r\n        .map((result) => result[0])\r\n        .map((result) => result.transcript)\r\n        .join(\"\");\r\n      console.log(transcript);\r\n      setMessage(transcript);\r\n      mic.onerror = (event) => {\r\n        console.log(event.error);\r\n      };\r\n    };\r\n  };\r\n\r\n  if (room.isProtected === false || room.host === userId) {\r\n    return (\r\n      <div className=\"foot form-group d-flex\">\r\n        <input\r\n          id=\"message\"\r\n          placeholder=\"Type a message...\"\r\n          value={message}\r\n          className=\"form-control bg-light\"\r\n          onChange={typingHandler}\r\n          onKeyPress={(event) =>\r\n            event.key === \"Enter\" ? sendMessage(event) : null\r\n          }\r\n        />\r\n        {isListening ? (\r\n          <Tooltip arrow title=\"🔴Stop Listening\">\r\n            <button\r\n              onClick={() => setIsListening((prevState) => !prevState)}\r\n              className=\"btn btn-danger mx-2\"\r\n            >\r\n              <MicOffSharpIcon />\r\n            </button>\r\n          </Tooltip>\r\n        ) : (\r\n          <Tooltip arrow title=\"👂Start Listening\">\r\n            <button\r\n              onClick={() => setIsListening((prevState) => !prevState)}\r\n              className=\"btn btn-primary mx-2\"\r\n            >\r\n              <MicSharpIcon />\r\n            </button>\r\n          </Tooltip>\r\n        )}\r\n        <button\r\n          onClick={(e) => sendMessage(e)}\r\n          className=\"btn btn-primary mr-2\"\r\n        >\r\n          <SendIcon />\r\n        </button>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"foot\">\r\n        <h4>Only host can send message.</h4>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Avatar } from \"@mui/material\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\nimport \"./chat.css\";\r\nimport \"../../index.scss\";\r\n\r\nconst Message = ({ message, name, userId }) => {\r\n  let isSentByCurrentUser = false;\r\n\r\n  if (message.senderId === userId) {\r\n    isSentByCurrentUser = true;\r\n  }\r\n  return isSentByCurrentUser ? (\r\n    <div className=\"row justify-content-end pl-5 \">\r\n      <div className=\"rec d-flex flex-column align-items-end m-2 shadow p-2  border rounded w-auto\">\r\n        <div>\r\n          <em className=\"m-1 flex-start fw-bold text-uppercase\">{name}</em>\r\n          <em className=\"m-1 flex-end\" style={{ fontSize: \"10px\" }}>\r\n            {moment(message.timestamp).format(\"DD/MM hh:mm\")}\r\n          </em>\r\n        </div>\r\n        <h6 className=\"m-1\">{message.message}</h6>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"row justify-content-start pl-5 \">\r\n      <Avatar sx={{ marginTop: \"12px\" }}>\r\n        <PersonIcon />\r\n      </Avatar>\r\n      <div className=\"sen d-flex flex-column align-items-end my-2 shadow p-2 border rounded w-auto\">\r\n        <div>\r\n          <em className=\"m-1 flex-start fw-bold text-uppercase\">\r\n            {message.sender}\r\n          </em>\r\n          <em className=\"m-1 flex-end\" style={{ fontSize: \"10px\" }}>\r\n            {moment(message.timestamp).format(\"DD/MM hh:mm\")}\r\n          </em>\r\n        </div>\r\n        <h6 className=\"m-1\">{message.message}</h6>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport Message from \"./Message\";\r\nimport \"../../index.scss\";\r\n\r\nconst Messages = ({ messages, name, userId }) => {\r\n  return (\r\n    <div className=\"messages\">\r\n      {messages.map((message, i) => (\r\n        <div key={i}>\r\n          <Message message={message} name={name} userId={userId} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Box, Fab, IconButton } from \"@mui/material\";\r\nimport io from \"socket.io-client\";\r\nimport useSound from \"use-sound\";\r\nimport Lottie from \"lottie-react\";\r\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\r\nimport CallIcon from \"@mui/icons-material/Call\";\r\nimport CallEndIcon from \"@mui/icons-material/CallEnd\";\r\nimport Input from \"./Input\";\r\nimport Messages from \"./Messages\";\r\nimport { usePostMessageMutation } from \"../../redux/api\";\r\nimport messageReceived from \"../../static/received.mp3\";\r\nimport messageSent from \"../../static/sent.mp3\";\r\nimport call from \"../../static/call.mp3\";\r\nimport typingAnimation from \"../../static/typing.json\";\r\nimport callingAnimation from \"../../static/call.json\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { callActive } from \"../../redux/callreducer\";\r\nimport { styled } from \"@mui/system\";\r\nimport { green, red } from \"@mui/material/colors\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Chat = ({ userId, name, room, prevMessages }) => {\r\n  const [playReceived] = useSound(messageReceived);\r\n  const [playSent] = useSound(messageSent);\r\n  const [playCall, { stop }] = useSound(call);\r\n\r\n  const ENDPOINT = process.env.REACT_APP_ENDPOINT;\r\n  let socket = useRef(null);\r\n  const navigate = useNavigate();\r\n  const [postMessage] = usePostMessageMutation();\r\n  const inCall = useSelector(callActive);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [typing, setTyping] = useState(false);\r\n  const [istyping, setIsTyping] = useState(false);\r\n  const [showCall, setShowCall] = useState(false);\r\n  let timeout = useRef(null);\r\n  const scrollRef = useRef();\r\n\r\n  useEffect(() => {\r\n    setMessages(prevMessages);\r\n  }, [prevMessages]);\r\n\r\n  useEffect(\r\n    () =>\r\n      scrollRef.current?.scrollIntoView({ block: \"end\", behaviour: \"smooth\" }),\r\n    [messages, istyping]\r\n  );\r\n\r\n  const scrollToBottom = () => {\r\n    scrollRef.current?.scrollIntoView({ block: \"end\", behaviour: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.current = io(ENDPOINT);\r\n    socket.current.emit(\"join\", { name, userId, room: room._id }, (error) => {\r\n      if (error) {\r\n        console.error(error);\r\n      }\r\n    });\r\n    return () => {\r\n      socket.current?.disconnect();\r\n    };\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (socket.current) {\r\n      socket.current.on(\"message\", (message) => {\r\n        playReceived();\r\n        setMessages((messages) => [...messages, message]);\r\n      });\r\n      socket.current.on(\"typing\", () => setIsTyping(true));\r\n      socket.current.on(\"stop-typing\", () => setIsTyping(false));\r\n      socket.current.on(\"call\", () => {\r\n        if (!inCall) {\r\n          playCall();\r\n          setShowCall(true);\r\n          timeout.current = setTimeout(() => {\r\n            setShowCall(false);\r\n          }, 35000);\r\n        }\r\n      });\r\n    }\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  const callPick = () => {\r\n    clearTimeout(timeout.current);\r\n    setShowCall(false);\r\n    stop();\r\n    navigate(`/video-call/${room._id}`);\r\n  };\r\n\r\n  const callCut = () => {\r\n    clearTimeout(timeout.current);\r\n    stop();\r\n    setShowCall(false);\r\n  };\r\n\r\n  const sendMessage = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (message) {\r\n      socket.current.emit(\"sendMessage\", message, () => setMessage(\"\"));\r\n      socket.current.emit(\"stop-typing\");\r\n      playSent();\r\n      await postMessage({ userId, roomId: room._id, message });\r\n    }\r\n  };\r\n\r\n  const typingHandler = (e) => {\r\n    setMessage(e.target.value);\r\n\r\n    if (!socket.current) return;\r\n\r\n    if (!typing) {\r\n      setTyping(true);\r\n      socket.current.emit(\"typing\");\r\n    }\r\n    let lastTypingTime = new Date().getTime();\r\n    var timerLength = 3000;\r\n    setTimeout(() => {\r\n      var timeNow = new Date().getTime();\r\n      var timeDiff = timeNow - lastTypingTime;\r\n      if (timeDiff >= timerLength && typing) {\r\n        socket.current.emit(\"stop-typing\");\r\n        setTyping(false);\r\n      }\r\n    }, timerLength);\r\n  };\r\n\r\n  const GreenButton = styled(IconButton)(() => ({\r\n    color: \"#fff\",\r\n    borderRadius: \"25px\",\r\n    margin: \"2px\",\r\n    backgroundColor: green[900],\r\n    \"&:hover\": {\r\n      backgroundColor: green[800],\r\n    },\r\n  }));\r\n\r\n  const RedButton = styled(IconButton)(() => ({\r\n    color: \"#fff\",\r\n    borderRadius: \"25px\",\r\n    margin: \"2px\",\r\n    backgroundColor: red[900],\r\n    \"&:hover\": {\r\n      backgroundColor: red[800],\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <Box ref={scrollRef}>\r\n      <div style={inCall ? { minHeight: \"85vh\" } : { minHeight: \"70vh\" }}>\r\n        <Messages messages={messages} name={name} userId={userId} />\r\n\r\n        {showCall && (\r\n          <Box\r\n            sx={{\r\n              position: \"fixed\",\r\n              bottom: \"80px\",\r\n              right: \"10px\",\r\n              zIndex: 1501,\r\n              width: \"300px\",\r\n              height: \"200px\",\r\n              border: \"solid black 1px\",\r\n              borderRadius: \"20px\",\r\n              background:\r\n                \"linear-gradient(124deg, rgba(165,103,215,1) 0%, rgba(79,79,252,0.9416141456582633) 100%)\",\r\n            }}\r\n          >\r\n            <Lottie\r\n              animationData={callingAnimation}\r\n              loop={true}\r\n              style={{ height: 120, width: 300 }}\r\n            />\r\n            <span className=\"d-flex justify-content-evenly\">\r\n              <GreenButton color=\"success\" onClick={callPick}>\r\n                <CallIcon fontSize=\"large\" />\r\n              </GreenButton>\r\n              <RedButton color=\"error\" onClick={callCut}>\r\n                <CallEndIcon fontSize=\"large\" />\r\n              </RedButton>\r\n            </span>\r\n          </Box>\r\n        )}\r\n\r\n        {istyping && (\r\n          <Lottie\r\n            animationData={typingAnimation}\r\n            loop={true}\r\n            style={{ height: 120, width: 150 }}\r\n          />\r\n        )}\r\n      </div>\r\n      <Input\r\n        room={room}\r\n        userId={userId}\r\n        message={message}\r\n        setMessage={setMessage}\r\n        typingHandler={typingHandler}\r\n        sendMessage={sendMessage}\r\n      />\r\n      <Fab\r\n        size=\"small\"\r\n        color=\"primary\"\r\n        aria-label=\"scroll-to-bottom\"\r\n        onClick={scrollToBottom}\r\n        sx={{ position: \"fixed\", right: \"10px\", bottom: \"70px\" }}\r\n      >\r\n        <KeyboardArrowDownIcon fontSize=\"small\" />\r\n      </Fab>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Backdrop,\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n  ListItemIcon,\r\n  Menu,\r\n  MenuItem,\r\n  Toolbar,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport {\r\n  useDeleteRoomMutation,\r\n  useEditRoomMutation,\r\n  useGetRoomQuery,\r\n} from \"../../redux/api\";\r\nimport PersonAddAlt1Icon from \"@mui/icons-material/PersonAddAlt1\";\r\nimport VideocamIcon from \"@mui/icons-material/Videocam\";\r\nimport ExitToAppIcon from \"@mui/icons-material/ExitToApp\";\r\nimport LockIcon from \"@mui/icons-material/Lock\";\r\nimport LockOpenIcon from \"@mui/icons-material/LockOpen\";\r\nimport PersonRemoveIcon from \"@mui/icons-material/PersonRemove\";\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Box } from \"@mui/system\";\r\nimport { grey } from \"@mui/material/colors\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { callActive } from \"../../redux/callreducer\";\r\nimport RemoveUserFromRoom from \"./RemoveUserFromRoom\";\r\nimport AddUserInRoom from \"./AddUserInRoom\";\r\nimport Chat from \"../Chat/Chat\";\r\nimport \"../../index.css\";\r\n\r\nconst Room = () => {\r\n  const { roomId } = useParams();\r\n  const navigate = useNavigate();\r\n  const inCall = useSelector(callActive);\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const [isProtected, setIsProtected] = useState(true);\r\n  const {\r\n    data: room,\r\n    isSuccess,\r\n    isError,\r\n    isLoading,\r\n    isFetching,\r\n    error,\r\n  } = useGetRoomQuery({ userId: user._id, roomId });\r\n\r\n  const [\r\n    deleteRoom,\r\n    {\r\n      data: deleteData,\r\n      isSuccess: isDeleteSuccess,\r\n      isError: isDeleteError,\r\n      isLoading: isDeleteLoading,\r\n      error: deleteError,\r\n    },\r\n  ] = useDeleteRoomMutation();\r\n\r\n  const [editRoom] = useEditRoomMutation();\r\n  const [open, setOpen] = useState(false);\r\n  const [openRemove, setOpenRemove] = useState(false);\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const menuOpen = Boolean(anchorEl);\r\n  const handleMenuClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClickOpenRemove = () => {\r\n    setOpenRemove(true);\r\n  };\r\n\r\n  const handleCloseRemove = () => {\r\n    setOpenRemove(false);\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    await deleteRoom({ userId: user._id, roomId });\r\n  };\r\n\r\n  const handleChange = async () => {\r\n    await editRoom({ userId: user._id, roomId, isProtected: !isProtected });\r\n    setIsProtected(!isProtected);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) setIsProtected(room.isProtected);\r\n    if (isError) toast.error(error.message);\r\n    //eslint-disable-next-line\r\n  }, [isSuccess, isError]);\r\n\r\n  useEffect(() => {\r\n    if (isDeleteSuccess) {\r\n      toast.success(deleteData.message);\r\n      navigate(\"/rooms\");\r\n    }\r\n    if (isDeleteError) {\r\n      toast.error(deleteError.message);\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [isDeleteSuccess, isDeleteError]);\r\n\r\n  return (\r\n    <>\r\n      <Backdrop\r\n        sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n        open={isLoading || isFetching || isDeleteLoading}\r\n      >\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n      {isSuccess && (\r\n        <>\r\n          {!inCall && (\r\n            <AppBar\r\n              color=\"inherit\"\r\n              elevation={1}\r\n              position=\"sticky\"\r\n              sx={{ top: 65 }}\r\n            >\r\n              <Toolbar>\r\n                <Typography variant=\"h5\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                  <div\r\n                    className=\"animate-charcter\"\r\n                    style={{ fontSize: \"25px\", paddingLeft: \"8px\" }}\r\n                  >\r\n                    {room.name}\r\n                  </div>\r\n                </Typography>\r\n                <Typography\r\n                  noWrap\r\n                  variant=\"h5\"\r\n                  component=\"div\"\r\n                  sx={{ flexGrow: 5 }}\r\n                >\r\n                  {room.users.map((user) => (\r\n                    <span\r\n                      className=\"text-uppercase\"\r\n                      style={{ fontSize: \"18px\" }}\r\n                      key={user.userId}\r\n                    >\r\n                      {user.userName},{\" \"}\r\n                    </span>\r\n                  ))}\r\n                </Typography>\r\n\r\n                <IconButton\r\n                  disableRipple\r\n                  onClick={handleMenuClick}\r\n                  sx={{\r\n                    display: { xs: \"block\", md: \"none\", color: grey[900] },\r\n                  }}\r\n                >\r\n                  <MoreVertIcon />\r\n                </IconButton>\r\n\r\n                <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\r\n                  {room.host === user._id && (\r\n                    <Tooltip arrow title=\"Add User in room\">\r\n                      <button\r\n                        onClick={handleClickOpen}\r\n                        className=\"btn btn-primary mx-2\"\r\n                      >\r\n                        <PersonAddAlt1Icon />\r\n                      </button>\r\n                    </Tooltip>\r\n                  )}\r\n\r\n                  {room.host === user._id && (\r\n                    <Tooltip arrow title=\"Remove User from room\">\r\n                      <button\r\n                        onClick={handleClickOpenRemove}\r\n                        className=\"btn btn-danger mx-2\"\r\n                      >\r\n                        <PersonRemoveIcon />\r\n                      </button>\r\n                    </Tooltip>\r\n                  )}\r\n\r\n                  <Link\r\n                    to={`/video-call/${roomId}`}\r\n                    style={{ textDecoration: \"none\" }}\r\n                  >\r\n                    <Tooltip arrow title=\"Start Video Call\">\r\n                      <button className=\"btn btn-primary mx-2\">\r\n                        <VideocamIcon />\r\n                      </button>\r\n                    </Tooltip>\r\n                  </Link>\r\n\r\n                  <Tooltip arrow title=\"Leave Room\">\r\n                    <button\r\n                      onClick={handleClick}\r\n                      className=\"btn btn-danger mx-2\"\r\n                    >\r\n                      <ExitToAppIcon />\r\n                    </button>\r\n                  </Tooltip>\r\n\r\n                  {room.host === user._id && (\r\n                    <>\r\n                      {isProtected ? (\r\n                        <Tooltip arrow title=\"Unlock Room\">\r\n                          <button\r\n                            onClick={handleChange}\r\n                            className=\"btn btn-success mx-2\"\r\n                          >\r\n                            <LockOpenIcon />\r\n                          </button>\r\n                        </Tooltip>\r\n                      ) : (\r\n                        <Tooltip arrow title=\"Lock Room\">\r\n                          <button\r\n                            onClick={handleChange}\r\n                            className=\"btn btn-danger mx-2\"\r\n                          >\r\n                            <LockIcon />\r\n                          </button>\r\n                        </Tooltip>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </Box>\r\n              </Toolbar>\r\n            </AppBar>\r\n          )}\r\n\r\n          <Dialog open={open} onClose={handleClose} maxWidth=\"sm\" fullWidth>\r\n            <DialogTitle>Add User:</DialogTitle>\r\n            <DialogContent>\r\n              <AddUserInRoom roomId={roomId} usersInRoom={room.users} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleClose}>Cancel</Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n\r\n          <Dialog\r\n            open={openRemove}\r\n            onClose={handleCloseRemove}\r\n            maxWidth=\"sm\"\r\n            fullWidth\r\n          >\r\n            <DialogTitle>Remove User:</DialogTitle>\r\n            <DialogContent>\r\n              <RemoveUserFromRoom roomId={roomId} usersInRoom={room.users} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleCloseRemove}>Cancel</Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n\r\n          <Menu anchorEl={anchorEl} open={menuOpen} onClose={handleMenuClose}>\r\n            {room.host === user._id && (\r\n              <MenuItem onClick={handleClickOpen}>\r\n                <ListItemIcon>\r\n                  <PersonAddAlt1Icon fontSize=\"small\" />\r\n                </ListItemIcon>\r\n                Add User\r\n              </MenuItem>\r\n            )}\r\n\r\n            {room.host === user._id && (\r\n              <MenuItem onClick={handleClickOpenRemove}>\r\n                <ListItemIcon>\r\n                  <PersonRemoveIcon fontSize=\"small\" />\r\n                </ListItemIcon>\r\n                RemoveUser\r\n              </MenuItem>\r\n            )}\r\n\r\n            <Link\r\n              to={`/video-call/${roomId}`}\r\n              style={{ textDecoration: \"none\" }}\r\n            >\r\n              <MenuItem>\r\n                <ListItemIcon>\r\n                  <VideocamIcon fontSize=\"small\" />\r\n                </ListItemIcon>\r\n                Video Call\r\n              </MenuItem>\r\n            </Link>\r\n\r\n            <MenuItem onClick={handleClick}>\r\n              <ListItemIcon>\r\n                <ExitToAppIcon fontSize=\"small\" />\r\n              </ListItemIcon>\r\n              Leave Room\r\n            </MenuItem>\r\n\r\n            {room.host === user._id && (\r\n              <MenuItem onClick={handleChange}>\r\n                {isProtected ? (\r\n                  <>\r\n                    <ListItemIcon>\r\n                      <LockOpenIcon fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    Unlock Room\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <ListItemIcon>\r\n                      <LockIcon fontSize=\"small\" />\r\n                    </ListItemIcon>\r\n                    Lock Room\r\n                  </>\r\n                )}\r\n              </MenuItem>\r\n            )}\r\n          </Menu>\r\n\r\n          <Box sx={inCall ? { paddingTop: \"35px\" } : { paddingTop: \"0px\" }}>\r\n            <Chat\r\n              userId={user._id}\r\n              name={user.name}\r\n              room={room}\r\n              prevMessages={room.messages}\r\n            />\r\n          </Box>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n"],"names":["roomId","usersInRoom","user","JSON","parse","localStorage","getItem","removeUserFromRoom","isSuccess","isLoading","isError","error","useRemoveUserFromRoomMutation","useEffect","toast","window","location","reload","message","Backdrop","sx","color","zIndex","theme","drawer","open","CircularProgress","MenuList","filter","newUser","userId","_id","map","MenuItem","ListItemText","userName","Button","variant","onClick","async","newUserId","handleClick","data","users","useGetUsersQuery","addUserInRoom","addUserSuccess","useAddUserInRoomMutation","searchTerm","setSearchTerm","useState","placeholder","type","value","onChange","e","target","style","marginTop","className","some","name","toLowerCase","includes","email","mic","SpeechRecognition","webkitSpeechRecognition","continuous","interimResults","lang","room","typingHandler","setMessage","sendMessage","isListening","setIsListening","handleListen","start","onend","console","log","stop","onstart","onresult","event","transcript","Array","from","results","result","join","onerror","isProtected","host","id","onKeyPress","key","Tooltip","arrow","title","prevState","MicOffSharp","MicSharp","Send","isSentByCurrentUser","senderId","fontSize","moment","timestamp","format","Avatar","Person","sender","messages","i","prevMessages","playReceived","useSound","messageReceived","playSent","messageSent","playCall","call","socket","useRef","navigate","useNavigate","postMessage","usePostMessageMutation","inCall","useSelector","callActive","setMessages","typing","setTyping","istyping","setIsTyping","showCall","setShowCall","timeout","scrollRef","current","scrollIntoView","block","behaviour","io","process","emit","disconnect","on","setTimeout","GreenButton","styled","IconButton","borderRadius","margin","backgroundColor","green","RedButton","red","ref","minHeight","position","bottom","right","width","height","border","background","animationData","callingAnimation","loop","clearTimeout","Call","CallEnd","typingAnimation","lastTypingTime","Date","getTime","preventDefault","Fab","size","KeyboardArrowDown","useParams","setIsProtected","isFetching","useGetRoomQuery","deleteRoom","deleteData","isDeleteSuccess","isDeleteError","isDeleteLoading","deleteError","useDeleteRoomMutation","editRoom","useEditRoomMutation","setOpen","openRemove","setOpenRemove","anchorEl","setAnchorEl","React","menuOpen","Boolean","handleClickOpen","handleClose","handleClickOpenRemove","handleCloseRemove","handleChange","AppBar","elevation","top","Toolbar","Typography","component","flexGrow","paddingLeft","noWrap","disableRipple","currentTarget","display","xs","md","grey","MoreVert","Box","PersonAddAlt1","PersonRemove","to","textDecoration","Videocam","ExitToApp","LockOpen","Lock","Dialog","onClose","maxWidth","fullWidth","DialogTitle","DialogContent","DialogActions","Menu","ListItemIcon","paddingTop"],"sourceRoot":""}