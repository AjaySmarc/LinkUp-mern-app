{"version":3,"file":"static/js/148.bd1b2178.chunk.js","mappings":"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","sources":["components/Rooms/CreateRoomForm.jsx","components/Rooms/Rooms.jsx","components/Navbar/Navbar.jsx","Pages/ChatPage/ChatPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useCreateRoomMutation } from \"../../redux/api\";\r\nimport \"../../index.css\";\r\nimport \"../../index.scss\";\r\n\r\nconst CreateRoomForm = () => {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const [createRoom] = useCreateRoomMutation();\r\n  const [roomNameField, setRoomNameField] = useState(\"\");\r\n\r\n  const onSubmit = async (val) => {\r\n    const data = {\r\n      roomName: roomNameField,\r\n      userId: user._id,\r\n    };\r\n    val.preventDefault();\r\n    await toast.promise(createRoom(data), {\r\n      pending: \"Creating Room\",\r\n      success: \"Room created ðŸ‘Œ\",\r\n      error: \"Unable to create room ðŸ¤¯\",\r\n    });\r\n    setRoomNameField(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"foot2\">\r\n        <label className=\"fw-bold\" htmlFor=\"roomName\">Create new room</label>\r\n        <form className=\"form-group d-flex\" onSubmit={onSubmit}>\r\n          <input\r\n            required\r\n            id=\"roomName\"\r\n            type=\"text\"\r\n            value={roomNameField}\r\n            autoComplete=\"off\"\r\n            onChange={(e) => setRoomNameField(e.target.value)}\r\n            className=\"form-control bg-light\"\r\n          />\r\n          <button type=\"submit\" value=\"submit\" className=\"btn btn-primary\">\r\n            <AddIcon />\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateRoomForm;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CreateRoomForm from \"./CreateRoomForm\";\r\nimport { useGetRoomsQuery } from \"../../redux/api\";\r\nimport {\r\n  Container,\r\n  ListItemButton,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Paper,\r\n} from \"@mui/material\";\r\nimport GroupsIcon from \"@mui/icons-material/Groups\";\r\nimport \"./rooms.css\";\r\nimport \"../../index.scss\";\r\n\r\nconst Rooms = ({ setOpen }) => {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  const { data, isSuccess, isError, error } = useGetRoomsQuery({\r\n    userId: user._id,\r\n  });\r\n\r\n  const handle = () => {\r\n    if (window.innerWidth < 600) {\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar\" onClick={handle}>\r\n      <Container className=\"leftbar\">\r\n        <Paper className=\"leftbar__paper\">\r\n          <div style={{ height: \"72vh\" }}>\r\n            {isSuccess && data.length ? (\r\n              <ul className=\"list-group\">\r\n                {data.map((room) => (\r\n                  <li key={room._id} className=\"list-group-item\">\r\n                    <Link\r\n                      to={`/rooms/${room._id}`}\r\n                      style={{ textDecoration: \"none\" }}\r\n                    >\r\n                      {\r\n                        <ListItemButton>\r\n                          <ListItemIcon>\r\n                            <GroupsIcon />\r\n                          </ListItemIcon>\r\n                          <ListItemText>\r\n                            <span className=\"fw-bold text-uppercase\">\r\n                              {room.name}\r\n                            </span>\r\n                          </ListItemText>\r\n                        </ListItemButton>\r\n                      }\r\n                    </Link>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <h3>No rooms</h3>\r\n            )}\r\n\r\n            {isError && <p>{error.message}</p>}\r\n          </div>\r\n\r\n          <div style={{ height: \"10%\" }}>\r\n            <CreateRoomForm />\r\n          </div>\r\n        </Paper>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rooms;\r\n","import { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  Button,\r\n  Drawer,\r\n  IconButton,\r\n  Link,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport MenuRoundedIcon from \"@mui/icons-material/MenuRounded\";\r\nimport GitHubIcon from \"@mui/icons-material/GitHub\";\r\nimport ExitToAppIcon from \"@mui/icons-material/ExitToApp\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport Rooms from \"../Rooms/Rooms\";\r\nimport { styled } from \"@mui/system\";\r\nimport { grey } from \"@mui/material/colors\";\r\nimport \"../../index.css\";\r\n\r\nconst Navbar = ({ open, setOpen }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const BlackButton = styled(Button)(() => ({\r\n    color: grey.A100,\r\n    borderRadius: \"25px\",\r\n    margin: \"2px\",\r\n    backgroundColor: grey[900],\r\n    \"&:hover\": {\r\n      backgroundColor: grey[800],\r\n    },\r\n  }));\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"user\");\r\n    navigate(\"/auth\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        elevation={6}\r\n        sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n      >\r\n        <Toolbar>\r\n          <IconButton disableRipple onClick={() => setOpen(!open)}>\r\n            {!open ? (\r\n              <MenuRoundedIcon fontSize=\"large\" />\r\n            ) : (\r\n              <CloseIcon fontSize=\"large\" />\r\n            )}\r\n          </IconButton>\r\n          <Typography\r\n            component=\"p\"\r\n            variant=\"h4\"\r\n            sx={{ flexGrow: 1, fontFamily: \"cursive\" }}\r\n          >\r\n            VIA\r\n            <Box\r\n              component=\"span\"\r\n              sx={{ display: { xs: \"none\", md: \"inline\" }, fontSize:\"20px\" }}\r\n            >\r\n              {\" \"}Video Interaction Application\r\n            </Box>\r\n          </Typography>\r\n          <Link\r\n            href=\"https://github.com/AjaySmarc\"\r\n            target=\"_blank\"\r\n            rel=\"noopener\"\r\n            underline=\"none\"\r\n          >\r\n            <BlackButton variant=\"contained\" startIcon={<GitHubIcon />}>\r\n              GitHub\r\n            </BlackButton>\r\n          </Link>\r\n          <BlackButton\r\n            variant=\"contained\"\r\n            startIcon={<ExitToAppIcon />}\r\n            onClick={logout}\r\n          >\r\n            Logout\r\n          </BlackButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        sx={{ flexShrink: 0 }}\r\n        variant=\"persistent\"\r\n        transitionDuration={2}\r\n        anchor={\"left\"}\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n      >\r\n        <Rooms setOpen={setOpen} />\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport { styled } from \"@mui/material\";\r\nimport Navbar from \"../../components/Navbar/Navbar\";\r\nimport \"../../index.scss\";\r\n\r\nconst ChatPage = () => {\r\n  const drawerWidth = 320;\r\n\r\n  const Main = styled(\"main\", { shouldForwardProp: (prop) => prop !== \"open\" })(\r\n    ({ theme, open }) => ({\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n      marginTop: \"60px\",\r\n      transition: theme.transitions.create(\"margin\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      marginLeft: 0,\r\n      ...(open && {\r\n        transition: theme.transitions.create(\"margin\", {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: `${drawerWidth}px`,\r\n        [theme.breakpoints.down(500)]: {\r\n          display: \"none\",\r\n        },\r\n      }),\r\n    })\r\n  );\r\n\r\n  const [open, setOpen] = useState(true);\r\n  return (\r\n    <div>\r\n      <Navbar open={open} setOpen={setOpen} />\r\n      <Main open={open}>\r\n        <Outlet />\r\n      </Main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatPage;\r\n"],"names":["user","JSON","parse","localStorage","getItem","createRoom","useCreateRoomMutation","roomNameField","setRoomNameField","useState","className","htmlFor","onSubmit","async","data","roomName","userId","_id","val","preventDefault","toast","pending","success","error","required","id","type","value","autoComplete","onChange","e","target","Add","setOpen","isSuccess","isError","useGetRoomsQuery","onClick","window","innerWidth","Container","Paper","style","height","length","map","room","to","textDecoration","ListItemButton","ListItemIcon","Groups","ListItemText","name","message","open","navigate","useNavigate","BlackButton","styled","Button","color","grey","borderRadius","margin","backgroundColor","AppBar","position","elevation","sx","zIndex","theme","drawer","Toolbar","IconButton","disableRipple","Close","fontSize","MenuRounded","Typography","component","variant","flexGrow","fontFamily","Box","display","xs","md","Link","href","rel","underline","startIcon","GitHub","ExitToApp","removeItem","Drawer","flexShrink","transitionDuration","anchor","onClose","Main","shouldForwardProp","prop","padding","spacing","marginTop","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","easeOut","enteringScreen","breakpoints","down"],"sourceRoot":""}